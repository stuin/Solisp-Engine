#General system test
"Every line should return Passed"

#Math test
(If (==
	(+ 3 2) # Each of these lines returns 5
	(- 10 5)
	(* 5 1)
	(/ 20 4)
	(% 15 10)
) Passed Failed)

#Basic type setting + Joining concat
(If (> (Join {3 2}) 30) #32 > 30
Passed Failed)

#Summing up lists
(If (< (Eval (Append {+} (Set list {1 2 3 4 5}))) 20) #{+ 1 2 3 4 5}
Passed Failed)

#For each loops and multipling together lists
(If (Eval (Append {*} (For-Each (Get list) i (!= i 0))))
Passed Failed)

#Alternate list building
(Join (Quote P a s s e "d"))

#Reverse list
(Join (Reverse {d e s s a P}))

#Duplicating list
(If (== 8 (Eval (Append {+} (Duplicate 4 {1 1}))))
Passed Failed)

#Weird formatting test
(If#Testing
1(Join 		 {Pass ed})"Failed"
)

