Import('env')

sources = [
    "register_types.cpp",
    "Gameplay/game.cpp",
    "Gameplay/card.cpp",
    "Gameplay/builder.cpp",
    "lisp/card_lisp.cpp",
    "lisp/card_library.cpp",
    "lisp/lisp.cpp",
    "lisp/library.cpp",
    "lisp/reader.cpp"
]

module_env = env.Clone()
module_env.Append(CCFLAGS=['-O2'])
module_env.Append(CXXFLAGS=['-std=c++17'])

module_env.Append(CPPPATH=["./Gameplay","./Godot"])
module_env.Append(LIBPATH=["./Gameplay"])

if ARGUMENTS.get('solisp_shared', 'yes') == 'yes':
    # Shared lib compilation
    module_env.Append(CCFLAGS=['-fPIC'])
    module_env['LIBS'] = []
    shared_lib = module_env.SharedLibrary(target='#bin/solisp', source=sources)
    shared_lib_shim = shared_lib[0].name.rsplit('.', 1)[0]
    env.Append(LIBS=[shared_lib_shim])
    env.Append(LIBPATH=['#bin'])
else:
    # Static compilation
    module_env.add_source_files(env.modules_sources, sources)